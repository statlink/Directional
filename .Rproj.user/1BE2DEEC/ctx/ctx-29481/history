mi <- mi/sqrt( Rfast::rowsums(mi^2) )
m <- Rfast::colmeans(x)
m <- m/sqrt(sum(m^2))
m <- matrix( rep(m, 2), nrow = 2, byrow = TRUE )
rs <- Rfast::colsums(rsi)
mu <- atan(rs[2]/rs[1]) + pi * (rs[1] < 0)
con <- sum( cos(u - mu) )
R <- sqrt( sum(rs^2) )
k1 <- (1.28 - 0.53 * R^2/n^2) * tan(0.5 * pi * R/n)
if (k1 < 710) {
der <- con - n * besselI(k1, 1, expon.scaled = TRUE) / besselI(k1, 0, expon.scaled = TRUE)
a <- besselI(k1, 0)^2/2 + besselI(k1, 2) * besselI(k1, 0)/2 - besselI(k1, 1)^2
der2 <- n * a/besselI(k1, 0)^2
k2 <- k1 + der/der2
while (abs(k1 - k2) > 1e-07) {
k1 <- k2
der <- con - n * besselI(k1, 1, expon.scaled = TRUE)/besselI(k1, 0, expon.scaled = TRUE)
a <- besselI(k1, 0)^2/2 + besselI(k1, 2) * besselI(k1, 0)/2 - besselI(k1, 1)^2
der2 <- n * a/besselI(k1, 0)^2
k2 <- k1 + der/der2
}
} else k2 <- k1
kapa <- k2
w <- kapa * sum( Ri * Rfast::rowsums( (mi - m)^2 ) )
ni <- tabulate(ina)
x <- cbind( cos(u), sin(u) )
n <- dim(x)[1]
rsi <- rowsum(x, ina)
Ri <- sqrt(Rfast::rowsums( rsi^2) )
mi <- rsi/ni
mi <- mi/sqrt( Rfast::rowsums(mi^2) )
m <- Rfast::colmeans(x)
m <- m/sqrt(sum(m^2))
m <- matrix( rep(m, 2), nrow = 2, byrow = TRUE )
rs <- Rfast::colsums(rsi)
mu <- atan(rs[2]/rs[1]) + pi * (rs[1] < 0)
con <- sum( cos(u - mu) )
R <- sqrt( sum(rs^2) )
Ri
ina=sample(ina,100)
ni <- tabulate(ina)
x <- cbind( cos(u), sin(u) )
n <- dim(x)[1]
rsi <- rowsum(x, ina)
Ri <- sqrt(Rfast::rowsums( rsi^2) )
mi <- rsi/ni
mi <- mi/sqrt( Rfast::rowsums(mi^2) )
m <- Rfast::colmeans(x)
m <- m/sqrt(sum(m^2))
m <- matrix( rep(m, 2), nrow = 2, byrow = TRUE )
rs <- Rfast::colsums(rsi)
mu <- atan(rs[2]/rs[1]) + pi * (rs[1] < 0)
con <- sum( cos(u - mu) )
R <- sqrt( sum(rs^2) )
Ri
R
u
ina
x
ina=rep(1:2,each=50)
rads
B
B=999
u <- c(u1, u2)
if ( !rads )  u <- u * pi/180
ina <- c( rep(1, length(u1) ), rep(2, length(u2) ) )
ni <- tabulate(ina)
x <- cbind( cos(u), sin(u) )
n <- dim(x)[1]
rsi <- rowsum(x, ina)
Ri <- sqrt(Rfast::rowsums( rsi^2) )
mi <- rsi/ni
mi <- mi/sqrt( Rfast::rowsums(mi^2) )
m <- Rfast::colmeans(x)
m <- m/sqrt(sum(m^2))
m <- matrix( rep(m, 2), nrow = 2, byrow = TRUE )
rs <- Rfast::colsums(rsi)
mu <- atan(rs[2]/rs[1]) + pi * (rs[1] < 0)
con <- sum( cos(u - mu) )
R <- sqrt( sum(rs^2) )
k1 <- (1.28 - 0.53 * R^2/n^2) * tan(0.5 * pi * R/n)
if (k1 < 710) {
der <- con - n * besselI(k1, 1, expon.scaled = TRUE) / besselI(k1, 0, expon.scaled = TRUE)
a <- besselI(k1, 0)^2/2 + besselI(k1, 2) * besselI(k1, 0)/2 - besselI(k1, 1)^2
der2 <- n * a/besselI(k1, 0)^2
k2 <- k1 + der/der2
while (abs(k1 - k2) > 1e-07) {
k1 <- k2
der <- con - n * besselI(k1, 1, expon.scaled = TRUE)/besselI(k1, 0, expon.scaled = TRUE)
a <- besselI(k1, 0)^2/2 + besselI(k1, 2) * besselI(k1, 0)/2 - besselI(k1, 1)^2
der2 <- n * a/besselI(k1, 0)^2
k2 <- k1 + der/der2
}
} else k2 <- k1
kapa <- k2
w <- kapa * sum( Ri * Rfast::rowsums( (mi - m)^2 ) )
lr.circaov(u,ina)
w
wp <- numeric(B)
for (i in 1:B) {
ind <- sample(ina, n)
rsi <- rowsum(x, ina)
Ri <- sqrt(Rfast::rowsums( rsi^2) )
mi <- rsi/ni
mi <- mi/sqrt( Rfast::rowsums(mi^2) )
wp[i] <- kapa * sum( Ri * Rfast::rowsums( (mi - m)^2 ) )
}
sum(wp>w)
wp
wp <- numeric(B)
for (i in 1:B) {
ind <- sample(ina, n)
rsi <- rowsum(x, ind)
Ri <- sqrt(Rfast::rowsums( rsi^2) )
mi <- rsi/ni
mi <- mi/sqrt( Rfast::rowsums(mi^2) )
wp[i] <- kapa * sum( Ri * Rfast::rowsums( (mi - m)^2 ) )
}
sum(wp>w)
mean(wp>w)
ind <- sample(ina, n)
rsi <- rowsum(x, ind)
Ri <- sqrt(Rfast::rowsums( rsi^2) )
mi <- rsi/ni
Ri
ind <- sample(ina, n)
rsi <- rowsum(x, ind)
Ri <- sqrt(Rfast::rowsums( rsi^2) )
mi <- rsi/ni
Ri
source('C:/Users/User/Desktop/Folder/paketo/Directional statistics/Directional/R/lrcirc.perm.R')
lrcirc.perm(u1,u2,rads=T)
u1=u[ina==1]
u2=u[ina==2]
lrcirc.perm(u1,u2,rads=T)
source('C:/Users/User/Desktop/Folder/paketo/Directional statistics/Directional/R/lrcirc.perm.R')
lrcirc.perm(u1,u2,rads=T)
lr.circaov(u1,u2,rads=T)
lr.circaov(u,ina)
source('C:/Users/User/Desktop/Folder/paketo/Directional statistics/Directional/R/lrcirc.perm.R')
lr.circaov(u,ina)
lrcirc.perm(u1,u2,rads=T)
lr.circaov(u,ina)
lrcirc.perm(u1,u2,rads=T)
ind <- sample(ina, n)
rsi <- rowsum(x, ind)
Ri <- sqrt( Rfast::rowsums(rsi^2) )
Ri
ind <- sample(ina, n)
rsi <- rowsum(x, ind)
Ri <- sqrt( Rfast::rowsums(rsi^2) )
Ri
Rfast2::lr.circaov
library(Directional)
?lr.circaov
?lrcirc.perm
?lrcirc.perm
library(Directional)
u1 <- rvonmises(20, 2.4, 15)
u2 <- rvonmises(20, 2.4, 15)
ina <- rep(1:2, each = 20)
rads=T
u1 <- rvonmises(20, 2.4, 15)
u2 <- rvonmises(20, 2.4, 15)
ina <- rep(1:2, each = 20)
u <- c(u1, u2)
if ( !rads )  u <- u * pi/180
ina <- c( rep(1, length(u1) ), rep(2, length(u2) ) )
ni <- tabulate(ina)
n <- dim(x)[1]
g <- 2
x1 <- cos(u)
x2 <- sin(u)
Ci <- Rfast::group(x1, ina)
Si <- Rfast::group(x2, ina)
Rbi <- (Ci^2 + Si^2)/ni^2
C <- sum(Ci)
S <- sum(Si)
Rbar <- sqrt(C^2 + S^2)/n
mu <- atan(S/C) + pi * (C < 0)
con <- sum( cos(u - mu) )
ni
u <- c(u1, u2)
if ( !rads )  u <- u * pi/180
ina <- c( rep(1, length(u1) ), rep(2, length(u2) ) )
ni <- tabulate(ina)
n <- sum(ni)
g <- 2
x1 <- cos(u)
x2 <- sin(u)
Ci <- Rfast::group(x1, ina)
Si <- Rfast::group(x2, ina)
Rbi <- (Ci^2 + Si^2)/ni^2
C <- sum(Ci)
S <- sum(Si)
Rbar <- sqrt(C^2 + S^2)/n
Rbar
ina=sample(ina,40)
ina
Ci <- Rfast::group(x1, ina)
Si <- Rfast::group(x2, ina)
Rbi <- (Ci^2 + Si^2)/ni^2
C <- sum(Ci)
S <- sum(Si)
Rbar <- sqrt(C^2 + S^2)/n
Rbar
Rbi
ina=sample(ina,40)
Ci <- Rfast::group(x1, ina)
Si <- Rfast::group(x2, ina)
Rbi <- (Ci^2 + Si^2)/ni^2
C <- sum(Ci)
S <- sum(Si)
Rbar <- sqrt(C^2 + S^2)/n
Rbi
source('C:/Users/User/Desktop/Folder/paketo/Directional statistics/Directional/R/embedcirc.perm.R')
source('C:/Users/User/Desktop/Folder/paketo/Directional statistics/Directional/R/embedcirc.perm.R')
embed.circaov(c(u1,u2),ina)
embed.circaov(c(u1,u2),ina,rads=T)
embedcirc.perm(u1,u2)
rads
u <- c(u1, u2)
if ( !rads )  u <- u * pi/180
ina <- c( rep(1, length(u1) ), rep(2, length(u2) ) )
ni <- tabulate(ina)
n <- sum(ni)
g <- 2
x1 <- cos(u)
x2 <- sin(u)
Ci <- Rfast::group(x1, ina)
Si <- Rfast::group(x2, ina)
Rbi <- (Ci^2 + Si^2)/ni^2
C <- sum(Ci)
S <- sum(Si)
Rbar <- sqrt(C^2 + S^2)/n
mu <- atan(S/C) + pi * (C < 0)
con <- sum( cos(u - mu) )
k1 <- (1.28 - 0.53 * Rbar^2) * tan(0.5 * pi * Rbar)
if (k1 < 710) {
der <- con - n * besselI(k1, 1, expon.scaled = TRUE)/besselI(k1, 0, expon.scaled = TRUE)
a <- besselI(k1, 0)^2/2 + besselI(k1, 2) * besselI(k1, 0)/2 - besselI(k1, 1)^2
der2 <- n * a/besselI(k1, 0)^2
k2 <- k1 + der/der2
while (abs(k1 - k2) > 1e-08) {
k1 <- k2
der <- con - n * besselI(k1, 1, expon.scaled = TRUE)/besselI(k1, 0, expon.scaled = TRUE)
a <- besselI(k1, 0)^2/2 + besselI(k1, 2) * besselI(k1, 0)/2 - besselI(k1, 1)^2
der2 <- n * a/besselI(k1, 0)^2
k2 <- k1 + der/der2
}
} else k2 <- k1
kapa <- k2
Fb <- (sum(ni * Rbi) - n * Rbar^2) / ( (n - sum(ni * Rbi) ) / (n - 2) )
Fc <- (1 - 1/(5 * kapa) - 1/( 10 * kapa^2) ) * Fb
Fc
embed.circaov(c(u1,u2),ina)
embed.circaov(c(u1,u2),ina,rads=T)
ina
embedcirc.perm(u1,u2)
embedcirc.perm(u1,u2)
embedcirc.perm(u1,u2)
embedcirc.perm(u1,u2)
embedcirc.perm(u1,u2)
embedcirc.perm(u1,u2)
embedcirc.perm(u1,u2)
embedcirc.perm(u1,u2)
embedcirc.perm(u1,u2)
embedcirc.perm(u1,u2)
embedcirc.perm(u1,u2)
embedcirc.perm(u1,u2)
embedcirc.perm(u1,u2)
embedcirc.perm(u1,u2)
library(Directional)
Rfast::group
library(Directional)
library(Directional)
u1 <- rvonmises(20, 2.4, 5)
u2 <- rvonmises(20, 2.4, 10)
ina <- rep(1:2, each = 20)
hcfcirc.perm(u1, u2, ina, rads = TRUE)
u <- c(u1, u2)
if (!rads) u <- u * pi/180
ina <- c( rep(1, length(u1) ), rep(2, length(u2) ) )
n <- length(u)
ina <- as.numeric(ina)
x1 <- cos(u)
x2 <- sin(u)
Ci <- Rfast::group(x1, ina)
Si <- Rfast::group(x2, ina)
Ri <- sqrt(Ci^2 + Si^2)
V <- sum(Ri)
C <- sum(Ci)
S <- sum(Si)
R <- sqrt(C^2 + S^2)
Rfast2::hcf.circaov
if (!rads) u <- u * pi/180
ina <- c( rep(1, length(u1) ), rep(2, length(u2) ) )
n <- length(u)
ina <- as.numeric(ina)
x1 <- cos(u)
x2 <- sin(u)
Ci <- Rfast::group(x1, ina)
Si <- Rfast::group(x2, ina)
Ri <- sqrt(Ci^2 + Si^2)
V <- sum(Ri)
C <- sum(Ci)
S <- sum(Si)
R <- sqrt(C^2 + S^2)
mu <- atan(S/C) + pi * ( C < 0 )
con <- sum( cos(u - mu) )
k1 <- (1.28 - 0.53 * R^2/n^2) * tan(0.5 * pi * R/n)
if (k1 < 710) {
der <- con - n * besselI(k1, 1, expon.scaled = TRUE)/besselI(k1, 0, expon.scaled = TRUE)
a <- besselI(k1, 0)^2/2 + besselI(k1, 2) * besselI(k1, 0)/2 - besselI(k1, 1)^2
der2 <- n * a/besselI(k1, 0)^2
k2 <- k1 + der/der2
while (abs(k1 - k2) > 1e-8) {
k1 <- k2
der <- con - n * besselI(k1, 1, expon.scaled = TRUE)/besselI(k1, 0, expon.scaled = TRUE)
a <- besselI(k1, 0)^2/2 + besselI(k1, 2) * besselI(k1, 0)/2 - besselI(k1, 1)^2
der2 <- n * a/besselI(k1, 0)^2
k2 <- k1 + der/der2
}
} else k2 <- k1
kapa <- k2
if (kapa > 2) {
Ft <- (n - 2) * (V - R)/(n - V)
} else if (kapa < 2 & kapa > 1) {
Ft <- (1 + 3/(8 * kapa) ) * (n - 2) * (V - R) / (n - V)
} else  Ft <- NA
rads
B
B = 999
if ( !is.na(Ft) ) {
pft <- numeric(B)
for (i in 1:B) {
id <- sample(n, n)
Ci <- Rfast::group(x1[id], ina)
Si <- Rfast::group(x2[id], ina)
Ri <- sqrt(Ci^2 + Si^2)
V <- sum(Ri)
if (kapa > 2) {
pft[i] <- (n - 2) * (V - R)/(n - V)
} else if (kapa < 2 & kapa > 1) {
pft[i] <- (1 + 3/(8 * kapa)) * (n - 2) * (V - R) / (n - V)
} else  pft[i] <- NA
}
}
pvalue <- ( sum(pft > Ft) + 1 ) / (B + 1)
res <- c(Ft, pvalue, kapa)
names(res) <- c("test", "p-value", "kappa")
res
source('C:/Users/User/Desktop/Folder/paketo/Directional statistics/Directional/R/hcfcirc.perm.R')
hcfcirc.perm(u1, u2, ina)
rads
u <- c(u1, u2)
if (!rads) u <- u * pi/180
ina <- c( rep(1, length(u1) ), rep(2, length(u2) ) )
n <- length(u)
ina <- as.numeric(ina)
x1 <- cos(u)
x2 <- sin(u)
library(Directional)
u1 <- rvonmises(20, 2.4, 5)
u2 <- rvonmises(20, 2.4, 10)
ina <- rep(1:2, each = 20)
hcfcirc.perm(u1, u2, ina)
rads = TRUE
u <- c(u1, u2)
if (!rads) u <- u * pi/180
ina <- c( rep(1, length(u1) ), rep(2, length(u2) ) )
n <- length(u)
ina <- as.numeric(ina)
x1 <- cos(u)
x2 <- sin(u)
u <- c(u1, u2)
if (!rads) u <- u * pi/180
ina <- c( rep(1, length(u1) ), rep(2, length(u2) ) )
n <- length(u)
ina <- as.numeric(ina)
x1 <- cos(u)
x2 <- sin(u)
Ci <- Rfast::group(x1, ina)
Si <- Rfast::group(x2, ina)
Ri <- sqrt(Ci^2 + Si^2)
V <- sum(Ri)
C <- sum(Ci)
S <- sum(Si)
R <- sqrt(C^2 + S^2)
mu <- atan(S/C) + pi * ( C < 0 )
con <- sum( cos(u - mu) )
k1 <- (1.28 - 0.53 * R^2/n^2) * tan(0.5 * pi * R/n)
if (k1 < 710) {
der <- con - n * besselI(k1, 1, expon.scaled = TRUE)/besselI(k1, 0, expon.scaled = TRUE)
a <- besselI(k1, 0)^2/2 + besselI(k1, 2) * besselI(k1, 0)/2 - besselI(k1, 1)^2
der2 <- n * a/besselI(k1, 0)^2
k2 <- k1 + der/der2
while (abs(k1 - k2) > 1e-8) {
k1 <- k2
der <- con - n * besselI(k1, 1, expon.scaled = TRUE)/besselI(k1, 0, expon.scaled = TRUE)
a <- besselI(k1, 0)^2/2 + besselI(k1, 2) * besselI(k1, 0)/2 - besselI(k1, 1)^2
der2 <- n * a/besselI(k1, 0)^2
k2 <- k1 + der/der2
}
} else k2 <- k1
kapa <- k2
if (kapa > 2) {
Ft <- (n - 2) * (V - R)/(n - V)
} else if (kapa < 2 & kapa > 1) {
Ft <- (1 + 3/(8 * kapa) ) * (n - 2) * (V - R) / (n - V)
} else  Ft <- NA
pvalue <- NA
if ( !is.na(Ft) ) {
pft <- numeric(B)
for (i in 1:B) {
id <- sample(n, n)
Ci <- Rfast::group(x1[id], ina)
Si <- Rfast::group(x2[id], ina)
Ri <- sqrt(Ci^2 + Si^2)
V <- sum(Ri)
if (kapa > 2) {
pft[i] <- (n - 2) * (V - R)/(n - V)
} else if (kapa < 2 & kapa > 1) {
pft[i] <- (1 + 3/(8 * kapa)) * (n - 2) * (V - R) / (n - V)
} else  pft[i] <- NA
}
pvalue <- ( sum(pft > Ft) + 1 ) / (B + 1)
}
res <- c(Ft, pvalue, kapa)
names(res) <- c("test", "p-value", "kappa")
res
B=999
u1 <- rvonmises(20, 2.4, 5)
u2 <- rvonmises(20, 2.4, 10)
ina <- rep(1:2, each = 20)
hcfcirc.perm(u1, u2, ina)
u <- c(u1, u2)
if (!rads) u <- u * pi/180
ina <- c( rep(1, length(u1) ), rep(2, length(u2) ) )
n <- length(u)
ina <- as.numeric(ina)
x1 <- cos(u)
x2 <- sin(u)
Ci <- Rfast::group(x1, ina)
Si <- Rfast::group(x2, ina)
Ri <- sqrt(Ci^2 + Si^2)
V <- sum(Ri)
C <- sum(Ci)
S <- sum(Si)
R <- sqrt(C^2 + S^2)
mu <- atan(S/C) + pi * ( C < 0 )
con <- sum( cos(u - mu) )
k1 <- (1.28 - 0.53 * R^2/n^2) * tan(0.5 * pi * R/n)
if (k1 < 710) {
der <- con - n * besselI(k1, 1, expon.scaled = TRUE)/besselI(k1, 0, expon.scaled = TRUE)
a <- besselI(k1, 0)^2/2 + besselI(k1, 2) * besselI(k1, 0)/2 - besselI(k1, 1)^2
der2 <- n * a/besselI(k1, 0)^2
k2 <- k1 + der/der2
while (abs(k1 - k2) > 1e-8) {
k1 <- k2
der <- con - n * besselI(k1, 1, expon.scaled = TRUE)/besselI(k1, 0, expon.scaled = TRUE)
a <- besselI(k1, 0)^2/2 + besselI(k1, 2) * besselI(k1, 0)/2 - besselI(k1, 1)^2
der2 <- n * a/besselI(k1, 0)^2
k2 <- k1 + der/der2
}
} else k2 <- k1
kapa <- k2
if (kapa > 2) {
Ft <- (n - 2) * (V - R)/(n - V)
} else if (kapa < 2 & kapa > 1) {
Ft <- (1 + 3/(8 * kapa) ) * (n - 2) * (V - R) / (n - V)
} else  Ft <- NA
pvalue <- NA
if ( !is.na(Ft) ) {
pft <- numeric(B)
for (i in 1:B) {
id <- sample(n, n)
Ci <- Rfast::group(x1[id], ina)
Si <- Rfast::group(x2[id], ina)
Ri <- sqrt(Ci^2 + Si^2)
V <- sum(Ri)
if (kapa > 2) {
pft[i] <- (n - 2) * (V - R)/(n - V)
} else if (kapa < 2 & kapa > 1) {
pft[i] <- (1 + 3/(8 * kapa)) * (n - 2) * (V - R) / (n - V)
} else  pft[i] <- NA
}
pvalue <- ( sum(pft > Ft) + 1 ) / (B + 1)
}
res <- c(Ft, pvalue, kapa)
names(res) <- c("test", "p-value", "kappa")
res
u1 <- rvonmises(20, 2.4, 5)
u2 <- rvonmises(20, 2.4, 10)
ina <- rep(1:2, each = 20)
hcfcirc.perm(u1, u2, ina)
u
pi
!rads
(rads)
u1 <- rvonmises(20, 2.4, 5)
u2 <- rvonmises(20, 2.4, 10)
ina <- rep(1:2, each = 20)
hcfcirc.perm(u1, u2, ina)
length(rads)
hcfcirc.perm(u1, u2, rads = TRUE, B = 999)
hetcirc.perm(u1, u2, rads = TRUE, B = 999)
lrcirc.perm(u1, u2, rads = TRUE, B = 999)
embedcirc.perm(u1, u2, rads = TRUE, B = 999)
kapa
kappa
library(Directional)
