{
    "type": [
        2,
        3,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2,
        0,
        1,
        2,
        2,
        2,
        2,
        2,
        0,
        1,
        0,
        1,
        0,
        1,
        0,
        1,
        2
    ],
    "data": [
        "\nR version 4.3.1 (2023-06-16 ucrt) -- \"Beagle Scouts\"\nCopyright (C) 2023 The R Foundation for Statistical Computing\nPlatform: x86_64-w64-mingw32/x64 (64-bit)\n\nR is free software and comes with ABSOLUTELY NO WARRANTY.\nYou are welcome to redistribute it under certain conditions.\nType 'license()' or 'licence()' for distribution details.\n\nR is a collaborative project with many contributors.\nType 'contributors()' for more information and\n'citation()' on how to cite R or R packages in publications.\n\nType 'demo()' for some demos, 'help()' for on-line help, or\n'help.start()' for an HTML browser interface to help.\nType 'q()' to quit R.\n\n",
        "The legacy packages maptools, rgdal, and rgeos, underpinning the sp package,\nwhich was just loaded, will retire in October 2023.\nPlease refer to R-spatial evolution reports for details, especially\nhttps://r-spatial.org/r/2023/05/15/evolution4.html.\nIt may be desirable to make the sf package available;\npackage maintainers should consider adding sf to Suggests:.\nThe sp package is now running under evolution status 2\n     (status 2 uses the sf package in place of rgdal)\n",
        "> ",
        "library(Directional)",
        "> ",
        "meandir.test",
        "function(x, mu, B = 999) {\n  ## x is the sample\n  ## mu is the hypothesized mean direction under H0\n  p <- dim(x)[2]  ## dimensionality of the data\n  n <- dim(x)[1]  ## sample size of the data\n  k1 <- Directional::vmf.mle(x)$k  ## concentration parameter under H1\n  xbar <- Rfast::colmeans(x)  ## x-bar\n  m1 <- xbar / sqrt( sum(xbar^2) )\n  sxm <- sum(x %*% mu)\n\n  lik <- function(k, x, sxm)  n * (p/2 - 1) * log(k) + k * sxm -  n * ( log( besselI(k, p/2 - 1, expon.scaled = TRUE) ) + k )\n\n  qa0 <- optimize(lik, c(0, 100000), x = x, sxm = sxm, maximum = TRUE)\n",
        "  k0 <- qa0$maximum  ## concentration parameter under H0\n  apk0 <- (1 - p/2) * log(k0/2) + lgamma(p/2) + log( besselI(k0, p/2 - 1, expon.scaled = TRUE) ) + k0\n  apk1 <- (1 - p/2) * log(k1/2) + lgamma(p/2) + log( besselI(k1, p/2 - 1, expon.scaled = TRUE) ) + k1\n\n  w <- 2 * n * ( k1 * sqrt( sum(xbar^2) ) - k0 * sum(mu * xbar) - apk1 + apk0 )\n  p.value <- pchisq(w, p - 1, lower.tail = FALSE)\n  parameter <- p - 1     ;   names(parameter) <- \"df\"\n  statistic <- w  ;   names(statistic) <- \"Test statistic\"\n  alternative <- \"Mean direction is not equal to some predefined direction\"\n",
        "  method <- \"Hypothesis test for a mean direction\"\n  data.name <- c(\"data\")\n  result <- list( statistic = statistic, parameter = parameter, p.value = p.value,\n                  alternative = alternative, method = method, data.name = data.name )\n  class(result) <- \"htest\"\n\n  if (B > 1) {\n    A <- rotation(m1, mu)\n    y <- tcrossprod(x, A)  ## bring the data under H0\n    ## y has mean direction equal to mu\n    wb <- numeric(B)\n\n    for (i in 1:B) {\n      nu <- Rfast2::Sample.int(n, n, replace = TRUE)\n      z <- y[nu, ]\n",
        "      k1 <- Directional::vmf.mle(z, fast = TRUE)$k  ## concentration parameter under H1\n      zbar <- Rfast::colmeans(z)  ## z-bar\n      sxm <- sum(z %*% mu)\n      qa0 <- optimize(lik, c(0, 100000), x = z, sxm = sxm, maximum = TRUE)\n      k0 <- qa0$maximum  ## concentration parameter under H0\n      apk0 <- (1 - p/2) * log(k0/2) + lgamma(p/2) + log( besselI(k0, p/2 - 1, expon.scaled = TRUE) ) + k0\n      apk1 <- (1 - p/2) * log(k1/2) + lgamma(p/2) + log( besselI(k1, p/2 - 1, expon.scaled = TRUE) ) + k1\n      wb[i] <- 2 * n * ( k1 * sqrt( sum(zbar^2) ) - k0 * sum(mu * zbar) - apk1 + apk0 )\n",
        "    }\n\n    p.value <- (sum(wb > w) + 1)/(B + 1)\n    parameter <- \"NA\"     ;   names(parameter) <- \"df\"\n    statistic <- w  ;   names(statistic) <- \"Test statistic\"\n    alternative <- \"Mean direction is not equal to some predefined direction\"\n    method <- \"Bootstrap hypothesis test for a mean direction\"\n    data.name <- c(\"data\")\n    result <- list( statistic = statistic, parameter = parameter, p.value = p.value,\n                    alternative = alternative, method = method, data.name = data.name )\n    class(result) <- \"htest\"\n",
        "  }\n\n  return(result)\n}\n<bytecode: 0x0000016dc3f69650>\n<environment: namespace:Directional>\n\nRestarting R session...\n\n",
        "> ",
        "library(Directional)",
        "> ",
        "Directional::hclr.aov",
        "function(x, ina) {\n\n  ina <- as.numeric(ina)\n  g <- max(ina)  ## how many groups are there\n  p <- dim(x)[2]  ## dimensionality of the data\n  n <- dim(x)[1]  ## sample size of the data\n  S <- rowsum(x, ina)\n  Ri <- sqrt( Rfast::rowsums(S^2) )  ## the resultant length of each group\n  S <- Rfast::colsums(S)\n  R <- sqrt( sum(S^2) )  ## the resultant length based on all the data\n\n  Apk <- function(p, k)  besselI(k, p/2, expon.scaled = TRUE) / besselI(k, p/2 - 1, expon.scaled = TRUE)\n\n  ## Next we estimate the common concentration parameter kappa under H0 and H1\n",
        "  Rk <- R/n\n  k1 <- Rk * (p - Rk^2)/(1 - Rk^2)\n  k2 <- k1 - (Apk(p, k1) - Rk) / ( 1 - Apk(p, k1)^2 - (p - 1)/k1 * Apk(p, k1) )\n  while ( abs(k2 - k1) > 1e-07 ) {\n    k1 <- k2\n    k2 <- k1 - (Apk(p, k1) - Rk) / (1 - Apk(p, k1)^2 - (p - 1)/k1 * Apk(p, k1) )\n  }\n  k0 <- k2  ## concentration parameter under H0\n\n  Rk <- sum(Ri)/n\n  k1 <- Rk * (p - Rk^2)/(1 - Rk^2)\n  k2 <- k1 - (Apk(p, k1) - Rk) / ( 1 - Apk(p, k1)^2 - (p - 1)/k1 * Apk(p, k1) )\n\n  while ( abs(k2 - k1) > 1e-07 ) {\n    k1 <- k2\n    k2 <- k1 - (Apk(p, k1) - Rk) / ( 1 - Apk(p, k1)^2 - (p - 1)/k1 * Apk(p, k1) )\n",
        "  }\n  k1 <- k2  ## concentration parameter under H1\n\n  I0 <- besselI( k0, p/2 - 1 )\n  I1 <- besselI( k1, p/2 - 1 )\n  Apk0 <- Apk(p, k0)\n  Apk1 <- Apk(p, k1)\n  up <- k0^(p/2 - 1) / I0 * exp(k0 * Apk0)\n  down <- k1^(p/2 - 1) / I1 * exp(k1 * Apk1)\n  P <- (n - g) / (g - 1) * ( (up / down)^( -2/(p - 1) ) - 1 )\n  p.value <- pf(P, (g - 1) * (p - 1), (n - g) * (p - 1), lower.tail = FALSE)\n\n  statistic <- P  ;   names(statistic) <- \"F-test statistic\"\n  parameter <- c( (g - 1) * (p - 1), (n - g) * (p - 1) )     ;   names(parameter) <- \"df\"\n",
        "  alternative <- \"At least one directional mean vector differs\"\n  method <- \"ANOVA for directional data using the high concentration log-likelihood ratio test\"\n  data.name <- c(\"data \", \" groups\")\n  result <- list( statistic = statistic, parameter = parameter, p.value = p.value,\n                  alternative = alternative, method = method, data.name = data.name )\n  class(result) <- \"htest\"\n  return(result)\n}\n<bytecode: 0x000001608296a4a0>\n<environment: namespace:Directional>\n\nRestarting R session...\n\n",
        "> ",
        "library(Directional)",
        "> ",
        "?hcf.aov",
        "> ",
        "x <- rvmf(60, rnorm(3), 15)",
        "> ",
        "ina <- rep(1:3, each = 20)",
        "> ",
        "hcf.aov(x, ina)",
        "\n\tANOVA for directional data using the high concentration test\n\ndata:  data  groups\nF-test statistic = 1.2417, df1 = 4, df2 = 114, p-value = 0.2973\nalternative hypothesis: At least one directional mean vector differs\n\n",
        "> ",
        "hcf.aov(x, ina, fc = FALSE)",
        "\n\tANOVA for directional data using the high concentration test\n\ndata:  data  groups\nF-test statistic = 1.2427, df1 = 4, df2 = 114, p-value = 0.2969\nalternative hypothesis: At least one directional mean vector differs\n\n",
        "> ",
        "lr.aov(x, ina)",
        "\n\tANOVA for directional data using the log-likelihood ratio test\n\ndata:  data  groups\nchi-square test statistic = 5.1214, df = 4, p-value = 0.2751\nalternative hypothesis: At least one directional mean vector differs\n\n",
        "> ",
        "embed.aov(x, ina)",
        "\n\tANOVA for directional data using the embedding approach\n\ndata:  data  groups\nF-test statistic = 1.2389, df1 = 4, df2 = 114, p-value = 0.2984\nalternative hypothesis: At least directional mean vector differs\n\n",
        "> ",
        "het.aov(x, ina)",
        "\n\tANOVA for directional data using the heterogeneous approach\n\ndata:  data  groups\nchi-square test statistic = 4.7063, df = 4, p-value = 0.3188\nalternative hypothesis: At least one directional mean vector differs\n\n",
        "> ",
        "?embedcirc.boot",
        "> ",
        "u1 <- rvonmises(20, 2.4, 5)",
        "> ",
        "u2 <- rvonmises(20, 2.4, 10)",
        "> ",
        "hcfcirc.boot(u1, u2)",
        "\n\tBootstrap ANOVA for 2 directional mean vectors using the high concentration test\n\ndata:  data  groups\nBootstrap hcf test statistic = 0.0005087, df = NA, p-value = 0.978\nalternative hypothesis: The 2 directional mean vector differ\n\n",
        "> ",
        "Directional::hcf.boot",
        "function(x1, x2, fc = TRUE, B = 999) {\n\n  n1 <- dim(x1)[1]    ;  n2 <- dim(x2)[1]\n  x <- rbind(x1, x2)\n  ina <- c( rep(1, n1), rep(2, n2) )\n  ni <- c(n1, n2)\n  p <- dim(x)[2]  ## dimensionality of the data\n  n <- n1 + n2  ## sample size of the data\n  S <- rowsum(x, ina)\n  m1 <- S[1, ]   ;   m2 <- S[2, ]\n  m1 <- m1 / sqrt( sum(m1^2) )\n  m2 <- m2 / sqrt( sum(m2^2) )\n  Ri <- sqrt( Rfast::rowsums(S^2) )  ## the resultant length of each group\n  S <- Rfast::colsums(x)\n  R <- sqrt( sum(S^2) )  ## the resultant length based on all the data\n",
        "  ## Next we stimate the common concentration parameter kappa\n  m <- S / R\n  kapaa <- Directional::vmf.mle(x, fast = TRUE)$kappa\n  ## kapaa is the estimated concentration parameter based on all the data\n  Ft <- (n - 2) * ( sum(Ri) - R) / ( n - sum(Ri) )\n  if (fc) {  ## correction is used\n    if (p == 3) {\n      Ft <- kapaa * (1/kapaa - 1/(5 * kapaa^3)) * Ft\n    } else if (p > 3)  Ft <- kapaa * ( 1/kapaa - (p - 3)/(4 * kapaa^2) - (p - 3)/(4 * kapaa^3) ) * Ft\n  }\n\n  rot1 <- t( Directional::rotation(m1, m) )\n  rot2 <- t( Directional::rotation(m2, m) )\n",
        "  y1 <- x1 %*% rot1\n  y2 <- x2 %*% rot2\n  ftb <- numeric(B)\n\n  for (i in 1:B) {\n    b1 <- Rfast2::Sample.int(n1, n1, replace = TRUE)\n    b2 <- Rfast2::Sample.int(n2, n2, replace = TRUE)\n    yb <- rbind(y1[b1, ], y2[b2, ])\n    S <- rowsum(yb, ina)\n    Ri <- sqrt( Rfast::rowsums(S^2) )\n    S <- Rfast::colsums(yb)\n    R <- sqrt( sum(S^2) )\n    ftb[i] <- (n - 2) * ( sum(Ri) - R) / ( n - sum(Ri) )\n    if (fc) {  ## correction is used\n      kapa <- Directional::vmf.mle(yb, fast = TRUE)$kappa\n      if (p == 3) {\n        ftb[i] <- kapa * (1/kapa - 1/(5 * kapa^3)) * ftb[i]\n",
        "      } else if (p > 3)  ftb[i] <- kapa * ( 1/kapa - (p - 3)/(4 * kappa^2) - (p - 3)/(4 * kapa^3) ) * ftb[i]\n    }\n  }\n\n  p.value <- ( sum(ftb > Ft) + 1 ) / (B + 1)\n  statistic <- Ft  ;   names(statistic) <- \"Bootstrap hcf test statistic\"\n  parameter <- \"NA\"     ;   names(parameter) <- \"df\"\n  alternative <- \"The 2 directional mean vector differ\"\n  method <- \"Bootstrap ANOVA for 2 directional mean vectors using the high concentration test\"\n  data.name <- c(\"data \", \" groups\")\n  result <- list( statistic = statistic, parameter = parameter, p.value = p.value,\n",
        "                  alternative = alternative, method = method, data.name = data.name )\n  class(result) <- \"htest\"\n  return(result)\n}\n<bytecode: 0x000001948364a560>\n<environment: namespace:Directional>\n",
        "> ",
        "?lrcirc.boot",
        "> ",
        "u1 <- rvonmises(20, 2.4, 5)",
        "> ",
        "u2 <- rvonmises(20, 2.4, 10)",
        "> ",
        "hcfcirc.boot(u1, u2)",
        "\n\tBootstrap ANOVA for 2 directional mean vectors using the high concentration test\n\ndata:  data  groups\nBootstrap hcf test statistic = 1.4856, df = NA, p-value = 0.224\nalternative hypothesis: The 2 directional mean vector differ\n\n\nRestarting R session...\n\n"
    ]
}