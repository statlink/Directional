bic.mixspcauchy2 <- function(x, G = 5, n.start = 10, tol = 1e-6, maxiters = 500) {
  ## x contains the data
  ## A is the maximum number of clusters, set to 3 by default
  runtime <- proc.time()
  logn <- log( dim(x)[1] )  ## sample size of the data
  bic <- 1:G

  mod <- flexmix::flexmix( x ~ 1, k = 1, model = circlus::FLXMCspcauchy(),
                           control = list(tol = tol, iter = maxiters) )
  bic[1] <-  BIC(mod)
  for ( vim in 2:G ) {
    a <- flexmix::initFlexmix( x ~ 1, k = vim, model = circlus::FLXMCspcauchy(),
                               control = list(minprior = 0), nrep = n.start)
    a <- flexmix::flexmix( x ~ 1, cluster = a@cluster, model = circlus::FLXMCspcauchy(),
                           control = list(tol = tol, iter = maxiters) )
    w <- a@posterior$scaled
    bic[vim] <- BIC(a)
  }  ## BIC for a range of different clusters
  runtime <- proc.time() - runtime

  names(bic) <- 1:G
  ina <- rep(1, G)
  ina[ which.min(bic) ] <- 3  ## chosen number of clusters will appear with red on the plot
  plot(1:G, bic, col = ina, xlab = "Number of components", ylab = "BIC values", cex.lab = 1.3, cex.axis = 1.3)
  abline(v = 1:G, lty = 2, col = "lightgrey")
  abline(h = seq(min(bic, na.rm = FALSE), max(bic, na.rm = FALSE), length = 10), lty = 2, col = "lightgrey" )
  lines(1:G, bic, lwd = 2)
  points(1:G, bic, pch = 9, col = ina)
  list(bic = bic, runtime = runtime)
}
